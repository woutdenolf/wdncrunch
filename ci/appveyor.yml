# Original script from https://github.com/silx-kit/pyFAI

version: "{build}"
shallow_clone: true
build: false

os:
    - Visual Studio 2015

cache:
    - '%LOCALAPPDATA%\pip\Cache'
    - '%CACHED_FOLDER%'

environment:
    global:
        WIN_SDK_ROOT: "C:\\Program Files\\Microsoft SDKs\\Windows"
        VENV_NAME: "venv_build"

        CACHED_FOLDER: "%LOCALAPPDATA%\\cashed"

    matrix:
        # Python 2.7
        - PYTHON_DIR: "C:\\Python27-x64"
          PYTHON_VERSION: "2.7.11"
          PYTHON_ARCH: "64"
          BUILD_ARGS: ""

        ## Python 3.4
        #- PYTHON_DIR: "C:\\Python34-x64"
        #  PYTHON_VERSION: "3.4.3"
        #  PYTHON_ARCH: "64"
        #  # OpenMP is not available on python 3.4
        #  BUILD_ARGS: "--no-openmp"

        ## Python 3.5
        #- PYTHON_DIR: "C:\\Python35-x64"
        #  PYTHON_VERSION: "3.5.0"
        #  PYTHON_ARCH: "64"
        #  BUILD_ARGS: ""

init:
  - ps: |
      Write-Host "Build worker environment variables:" -ForegroundColor Magenta
      Get-ChildItem Env: | %{"{0}={1}" -f $_.Name,$_.Value}

install:
    # Add Python to PATH
    - "SET PATH=%PYTHON_DIR%;%PYTHON_DIR%\\Scripts;%PATH%"

    # Upgrade/install distribution modules
    - "pip install --upgrade setuptools"
    - "python -m pip install --upgrade pip"

    # Install virtualenv
    - "pip install --upgrade virtualenv"
    - "virtualenv --version"

build_script:
    # Create build virtualenv
    - "virtualenv --clear %VENV_NAME%"
    - "%VENV_NAME%\\Scripts\\activate.bat"

    # Configure MSVC environment
    # Python 3.3 x64 and Python 3.4 x64 need a special configuration
    - ps: |
          If (($env:PYTHON_ARCH -eq "64") -And (($env:PYTHON_VERSION -Like "3.3.*") -Or ($env:PYTHON_VERSION -Like "3.4.*"))) {
            & "C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Bin\\SetEnv.cmd" /x64
          }

    # Install build dependencies
    - "pip install -r ci/requirements_appveyor.txt --upgrade"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"

    # Build
    - "python setup.py build %BUILD_ARGS%"
    - "python setup.py bdist_wheel bdist_msi"
    - ps: "ls dist"
    - "pip install --pre --no-index --find-links=dist/ %APPVEYOR_PROJECT_NAME%"

test_script:
    # Test installation
    - cd %HOMEDRIVE%%HOMEPATH%
    - "python -m %APPVEYOR_PROJECT_NAME%.tests.test_all"
    - cd %APPVEYOR_BUILD_FOLDER%

    # Leave build virtualenv
    - "%VENV_NAME%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_NAME% /s /q"

artifacts:
    # Archive the generated wheel package in the ci.appveyor.com build report.
    - path: dist\*
